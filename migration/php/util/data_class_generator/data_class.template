/**
 * {PACKAGE}
 */
{INCLUDES}
/**
 * {DESCRIPTION}
 *
 * @author {AUTHOR}
 */
class {CLASSNAME}
{
	/**
	 * {CLASSNAME} properties
	 */	 
	<!-- BEGIN CONSTS -->
	const {CONSTS.PROPERTY_CONST} = '{CONSTS.PROPERTY_NAME}';
	<!-- END CONSTS -->
	
	/**
	 * Default properties stored in an associative array.
	 */
	private $defaultProperties;
	
	/**
	 * Creates a new {CLASSNAME} object
	 * @param array $defaultProperties The default properties
	 */
	function {CLASSNAME}($defaultProperties = array ())
	{
		$this->defaultProperties = $defaultProperties;
	}
	
	/**
	 * Gets a default property by name.
	 * @param string $name The name of the property.
	 */
	function get_default_property($name)
	{
		return $this->defaultProperties[$name];
	}
	
	/**
	 * Gets the default properties
	 * @return array An associative array containing the properties.
	 */
	function get_default_properties()
	{
		return $this->defaultProperties;
	}
	
	/**
	 * Get the default properties
	 * @return array The property names.
	 */
	static function get_default_property_names()
	{
		return array ({DEFAULT_PROPERTY_NAMES});
	}
	
	/**
	 * Sets a default property by name.
	 * @param string $name The name of the property.
	 * @param mixed $value The new value for the property.
	 */
	function set_default_property($name, $value)
	{
		$this->defaultProperties[$name] = $value;
	}
	
	/**
	 * Sets the default properties of this class
	 */
	function set_default_properties($defaultProperties)
	{
		$this->defaultProperties = $defaultProperties;
	}

	<!-- BEGIN PROPERTY -->
	/**
	 * Returns the {PROPERTY.PROPERTY_NAME} of this {CLASSNAME}.
	 * @return the {PROPERTY.PROPERTY_NAME}.
	 */
	function get_{PROPERTY.PROPERTY_NAME}()
	{
		return $this->get_default_property(self :: {PROPERTY.PROPERTY_CONST});
	}
	
	<!-- END PROPERTY -->
	
}